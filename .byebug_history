c
$user.employer
$user
exit
JwtTokenUtils.decode(token)
c
record.persisted?
c
record.id
record[:id]
record.persisted?
c
record
c
persisted?
cost_price_visibility_status = cost_price_visibility_status || false 
cost_price_visibility_status.nil?
cost_price_visibility_status
c
VehicleModel.all.pluck(:id).include?(data[:vehicle_model_id])
VehicleModel.all.pluck(:id)
model
data
c
record.persisted?
record
c
exit
#"#{items[:item_type].capitalize}".constantize.transaction { items[:data].each { |record| obj_class.new(record).create_or_update(record)  }
obj_class = "BusinessLogic::#{items[:item_type].capitalize}Obj".constantize
obj_class
#"#{items[:item_type].capitalize}".constantize.transaction { items[:data].each { |record| obj_class.new(record).create_or_update(record)  }
"#{items[:item_type].capitalize}".constantize.transaction { p "a" }
"#{items[:item_type].capitalize}".constantize
"#{items[:item_type].capitalize}"
items[:item_type].capitalize
items[:item_type]
#{items[:item_type].capitalize}"
#{items[:item_type].capitalize}".constantize
"BusinessLogic::#{items[:item_type].capitalize}Obj".constantize
"BusinessLogic::#{items[:item_type].capitalize}Obj"
"BusinessLogic::#{items[:item_type]}Obj"
items[:item_type]
obj_class = "BusinessLogic::#{items[:item_type]}Obj".capitalize.constantize
items
c
exit
vehicle_params
exit
items_list
items_list[:item_type]
c
vehicle_params
vechile_params
exit
p1
p1 = params.require(:vehicle_details).permit(:name, :registration_id, :chassis_id, :engine_id, :manufacturing_year, :cost_price, :cost_price_visibility_status, :status, :loan_or_agreement_number, :stock_entry_date, :comments, :location, :vehicle_model_id, comments: [])
vehicle_params
exit
vehicle_params
c
params
c
record.present?
record.id
record.save!
record.email = params[:email]
record.name = params[:name]
record.phone = params[:phone]
c
agency.record
record.save!
record.phone = "121"
record.id
record.present?
record = Agency.find_by(id: params[:agency_id])
c
record.update(edit_params)
record = agency.record
c
record
record.update(params.to_h)
record
record.update(params.to_h)
params
c
exit
record.save!
params.to_h.deep_symbolize_keys.each { |key, value| record.send("#{key}=",value )}
record.update(params.to_h.deep_symbolize_keys)
agency.update(params.to_h.deep_symbolize_keys)
params.to_h.deep_symbolize_keys
params.to_h
record.update(params.to_h)
params
#record.save(params)
record.save(params)
record.update_attributes(params)
record.update(params)
params
record
c
params
c
agency
c
agency
agency.update(edit_params)
c
agency
edit_params
